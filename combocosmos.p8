pico-8 cartridge // http://www.pico-8.com
version 35
__lua__
function _init()

	star_timer = 0
	make_colors()
	
	player = make_player()
end

function _update60()
	for p in all(particles) do
		p:update()
	end
	star_timer += 1
	if star_timer > 16 then
		star_timer = 0
		col = colors_string[ceil(rnd(4))]
		new_particle(127,rnd(127),-rnd(0.5) - 0.25,rnd(0.125)-0.0625,rnd(5) + 48,col)
	end
	meteor_timer += meteor_speed
	if meteor_timer > 30 then
		meteor_timer = 0
		if(rnd() > 0.75) then
			make_boost()
		else
			make_boost()
		end
	end
	for m in all(meteors) do
		m:update()
	end
	for b in all(boosts) do
		b:update()
	end
	player:update()
end

function _draw()
	cls()
	for p in all(particles) do
		p:draw()
	end
	for m in all(meteors) do
		m:draw()
	end
	for b in all(boosts) do
		b:draw()
	end
	player:draw()
	rect(0,0,127,127-8,5)
	rectfill(0,127-8,127,127,5)
	local speed_text = "spd:"
	for i=1,meteor_speed do
		speed_text = speed_text .. "â˜…"
	end
	print(speed_text,4,120,7)
end
-->8
particles = {}

function make_colors()
	colors = {}
	colors_string = {"red","yellow","green","blue"}
	colors["red"] = {8,2}
	colors["yellow"] = {10,9}
	colors["green"] = {11,3}
	colors["blue"] = {12,1}
end

function new_particle(x,y,dx,dy,sprite,col,life)
	local particle = {}
	particle.x = x
	particle.y = y
	particle.dx = dx
	particle.dy = dy
	particle.sprite = sprite
	particle.col = col
	if(life == nil) then particle.life = 800 else particle.life = life end
	particle.draw = function(this)
		pal(12,colors[this.col][1])
		pal(1,colors[this.col][2])
		spr(this.sprite,this.x,this.y)
		end
	particle.update = function(this)
		this.x += dx
		this.y += dy
		if not in_bounds(this.x,this.y) then
			del(particles,this)
			end
		this.life -= 1
		if this.life < 0 then
			del(particles,this)
			end
		end
	add(particles,particle)
end


-->8
function in_bounds(x,y)
	if x < 0 or y < 0 or x > 128 or y > 128 then
		return false
	end
	return true
end

function abs_box(s)
	local box = {}
	box.x1 = s.box.x1 + s.x
	box.y1 = s.box.y1 + s.y
	box.x2 = s.box.x2 + s.x
	box.y2 = s.box.y2 + s.y
	return box
end

function coll(a,b)
	local box_a = abs_box(a)
	local box_b = abs_box(b)
	
	if box_a.x1 > box_b.x2 or box_a.y1 > box_b.y2 or box_b.x1 > box_a.x2 or box_b.y1 > box_a.y2 then
		return false
	end
	return true
	
	
end
-->8
function make_player()
	local player = {}
	player.x = 64
	player.y = 64
	player.dx = 0
	player.dy = 0
	player.sprite = 3
	player.max_speed = 1
	player.particle_timer = 0
	player.box = {x1=0,x2=8,y1=0,y2=8}
	player.update = function(this)
		local updated = false
		if btn(0) then
			this.dx -= (4/60)
			updated = true
		end
		if btn(1) then
			this.dx += (4/60)
			updated = true
		end
		if btn(2) then
			this.dy -= (4/60)
			updated = true
		end
		if btn(3) then
			this.dy += (4/60)
			updated = true
		end
		
		if not updated then
			this.dx *= 0.95
			this.dy *= 0.95
		end
		
		if this.x + this.dx > 128 - 4 then
			this.dx = -this.max_speed * 0.5
		end
		if this.x - this.dx < 4 then
			this.dx = this.max_speed * 0.5
		end
		if this.y + this.dy > 128 - 4 then
			this.dy = -this.max_speed * 0.5
		end
		if this.y - this.dy < 4 then
			this.dy = this.max_speed * 0.5
		end
		
		
		if this.dx != 0 then
			this.dx = mid(0,this.dx,sgn(this.dx) * this.max_speed)
		
		end
		if this.dy != 0 then
			this.dy = mid(0,this.dy,sgn(this.dy) * this.max_speed)
		end
		this.x += this.dx
		this.y += this.dy
		this.particle_timer += 1
		if this.particle_timer > 4 and (this.dx != 0 or this.dy != 0) then
			this.particle_timer = 0
			new_particle(this.x,this.y,-this.dx,-this.dy,52,"blue",15)
		end
		
		--collisions
		for m in all(meteors) do
			if coll(this,m) then
				del(meteors,m)
				meteor_speed -= 1
			end
		end
		
		for b in all(boosts) do
			if coll(this,b) then
				del(boosts,b)
				meteor_speed += 1
				end
		end
		
	end
	
	player.draw = function(this)
		pal()
		spr(this.sprite,this.x,this.y)
		--(this.x,this.y,1,8)
	end
	
	player.update_sprite = function(this)
		this.sprite = rnd(6) + 1
	end
	
	player:update_sprite()
	
	return player
end
-->8
meteors = {}
meteor_speed = 1
meteor_timer = 0

function make_meteor()
	local meteor = {}
	meteor.x = 128 + 4
	meteor.y = rnd(128) - 16
	meteor.sprite = rnd(8) + 16
	meteor.box = {x1=0,x2=8,y1=0,y2=8}
	meteor.update = function(this)
		this.x -= meteor_speed
		if this.x < 0 then
			del(meteors,this)
		end
	end
	
	meteor.draw = function(this)
		pal()
		spr(this.sprite,this.x,this.y)
	end
	add(meteors,meteor)
end

boosts = {}

function make_boost()
	local boost = {}
	boost.x = 128 + 4
	boost.y = rnd(128) - 16
	boost.box = {x1=0,x2=8,y1=0,y2=8}
	boost.update = function(this)
		this.x -= meteor_speed
		if this.x < 0 then
			del(boosts,this)
		end
	end
	boost.draw = function(this)
		pal()
		spr(34,this.x,this.y)
	end
	
	add(boosts,boost)
end
__gfx__
00000000000770000000000000000770000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000
00000000007777000500700000007777550005500000000000300550000000000000000000000000000000000000000000000000000000000000000000000000
00700700007777005003077000707777055005000733077000177005000000000000000000000000000000000000000000000000000000000000000000000000
00077000070770700531777700030770003330005531777700777700000000000000000000000000000000000000000000000000000000000000000000000000
00077000003113000531777705031100000337705531777700777700000000000000000000000000000000000000000000000000000000000000000000000000
00700700000330005003077005553330003177770733077050077100000000000000000000000000000000000000000000000000000000000000000000000000
00000000050550500500700000055007007177770000000005500300000000000000000000000000000000000000000000000000000000000000000000000000
00000000005005000000000000550000000007700000000000007000000000000000000000000000000000000000000000000000000000000000000000000000
07776660000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77666d66000001000aaa9999000000000000000000d5d50000092000000000000000000000000000000000000000000000000000000000000000000000000000
6666666deeeee2220777666600076000000000000d555d5000944400000000000000000000000000000000000000000000000000000000000000000000000000
766666d6e567e2120111919100766d0000077000055005d002449990000000000000000000000000000000000000000000000000000000000000000000000000
76d6dd6de675e212011191910066d600007007000d50055009994220000000000000000000000000000000000000000000000000000000000000000000000000
666d6dd6e576e212aaa99999000d60000dddd55005d555d000424900000000000000000000000000000000000000000000000000000000000000000000000000
66d6dd66eeeee222aaa919910000000000dd5500005d5d0000094000000000000000000000000000000000000000000000000000000000000000000000000000
066d66600e200e200100100100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000c00c00c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02202200022022001c01c01c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
28828820255255201c01c01c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
28888820255555201c01c01c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02888200025552001c01c01c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0028200000252000c00c00c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00020000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000010001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000c000000c0c00000c0c000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11c7c110000700000007000000c7c000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000c000000c0c00000c0c000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000010001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
